#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define U_TAPPING_TERM 200

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;
        input-processors = <&zip_xy_scaler 1 2>, <&zip_temp_layer 4 400>;

        // Switch to auto-mouse temp layer, decrease sensitivity

        scroll {
            layers = <5>; // SCROLL
            input-processors =
                <&zip_xy_scaler 1 5>,
                <&zip_xy_to_scroll_mapper>,
                <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <20 21>;
        };

        MiddleClickRight {
            bindings = <&mkp MCLK>;
            key-positions = <21 22>;
        };

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 16>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 19>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 15>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 20>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 14>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <9 21>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            bindings = <
&none  &kp Q             &kp W               &kp F            &kp P             &kp B          &kp J        &kp L              &kp U          &kp Y                &u_mt COLON SEMI      &none
&none  &kp A             &u_mt LEFT_SHIFT R  &u_mt LCTRL S    &u_mt LEFT_ALT T  &kp G          &kp M        &u_mt RIGHT_ALT N  &u_mt RCTRL E  &u_mt RIGHT_SHIFT I  &kp O                 &none
&none  &u_mt LEFT_GUI Z  &kp X               &kp C            &kp D             &kp V          &kp K        &kp H              &kp COMMA      &kp DOT              &u_mt QUESTION SLASH  &none
                                             &mt LC(V) LC(C)  &lt 4 TAB         &lt 2 SPACE    &lt 2 SPACE  &kp BACKSPACE
            >;
        };

        Qwerty {
            bindings = <
&none  &kp Q             &kp W          &kp E            &kp R             &kp T          &kp Y        &kp U              &kp I                  &kp O                &kp P           &none
&none  &kp A             &u_mt LS(S) S  &u_mt LC(D) D    &u_mt LEFT_ALT F  &kp G          &kp H        &u_mt RIGHT_ALT J  &u_mt RIGHT_CONTROL K  &u_mt RIGHT_SHIFT L  &mt COLON SEMI  &none
&none  &u_mt LEFT_GUI Z  &kp X          &kp C            &kp V             &kp B          &kp N        &kp M              &kp COMMA              &kp DOT              &kp FSLH        &none
                                        &mt LC(V) LC(C)  &lt 4 TAB         &lt 1 SPACE    &lt 2 SPACE  &kp BACKSPACE
            >;
        };

        arrow_numbers {
            bindings = <
&none  &mt EXCLAMATION NUMBER_1     &mt AT_SIGN NUMBER_2           &mt HASH NUMBER_3  &mt DLLR NUMBER_4  &mt PRCNT N5    &mt CARET NUMBER_6  &mt AMPS NUMBER_7  &mt ASTRK NUMBER_8  &mt LPAR NUMBER_9  &mt RPAR NUMBER_0        &none
&none  &mt UNDER MINUS              &mt PLUS EQUAL                 &none              &none              &none           &none               &kp PG_UP          &kp UP_ARROW        &kp PAGE_DOWN      &u_mt DOUBLE_QUOTES SQT  &none
&none  &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET  &none              &none              &none           &kp HOME            &kp LEFT_ARROW     &kp DOWN            &kp RIGHT          &kp END                  &none
                                                                   &none              &none              &none           &none               &none
            >;
        };

        FUN {
            bindings = <
&none  &none        &kp F1  &kp F2   &kp F3   &kp F4     &kp KP_N7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE  &kp KP_MULTIPLY  &none
&none  &none        &kp F5  &kp F6   &kp F7   &kp F8     &kp KP_N4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS   &kp KP_PLUS      &none
&none  &bootloader  &kp F9  &kp F10  &kp F11  &kp F12    &kp KP_N1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_COMMA   &kp KP_EQUAL     &none
                            &none    &none    &none      &kp KP_N0  &kp PERIOD
            >;
        };

        bt_layer {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans          &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &bt BT_PRV    &bt BT_NXT      &trans  &trans  &trans  &trans  &bootloader  &trans
                                      &trans        &trans        &trans          &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        AUTO-MOUSE {
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };
    };
};
